#include <stdio.h>
#include <stdlib.h>

typedef struct grafo
{
	int **Adj;
	int n_vertices;
}Grafo;

Grafo* Criar(Grafo * G, int n_v)
{
	G->n_vertices = n_v;

	G->Adj = (int **)malloc(n_v * sizeof(int*));
	int i, j;

	for(i=0;i<n_v;i++)
	{
		G->Adj[i] = (int*)malloc(n_v * sizeof(int));
	}

	for(i=0;i<n_v;i++)
	{
		for(j=0;j<n_v;j++)
		{
			G->Adj[i][j] = 0;
		}
	}

	return G;

}
void printvetor(int *s, int n)
{
	int i;
	for(i=0;i<n;i++)
	{
		if(s[i] != -1){
			printf("%d ", s[i]);
		}
	}
	printf("\n");
}
void Print_Grafo(Grafo *G, int n_v)
{
	int i, j;

	for(i=0;i<n_v;i++)
	{
		for(j=0;j<n_v;j++)
		{
			printf("%d", G->Adj[i][j]);
		}
		printf("\n");
	}
}
void InserirAresta(Grafo *grafo, int ver1, int ver2)
{
	grafo->Adj[ver1][ver2] = 1;
}

void Caminho(Grafo *g, int *s, int inicio, int fim, int n)
{
	if(inicio == fim){
		printf("OLAAA\n");
		//printvetor(s, n+1);
		return;
	}else{

		int i;
		for(i = 0;i <= n ;i++)
		{
			if(g->Adj[inicio][i] == 1 && s[i] == -1)
			{
				s[i] = i;
				Caminho(g, s, i, fim, n);
			}
		}
	}
}

int main()
{
	int n;
	scanf("%d", &n);
	++n;

	Grafo *grafo = Criar(grafo, n);

	int i;
	int s[n];

	for(i=1;i<n;i++)
	{
		grafo->Adj[i][0] = i;
		grafo->Adj[0][i] = i;

		s[i-1] = -1;

	}

	InserirAresta(grafo, 1,3);
	InserirAresta(grafo, 2,4);
	InserirAresta(grafo, 3,2);
	InserirAresta(grafo, 1,5);
	InserirAresta(grafo, 4,5);

	Print_Grafo(grafo,n);

	//Caminho(grafo, s, 2, 1, n);
	
	return 0;
}
